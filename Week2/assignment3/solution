// Текущая версия полнсотью рабочая и проходит все тесты

// Телефонная книга
var phoneBook = {};
// * @structure {name1: ['phone1', 'phone2', 'phone3']}

// * @param {Stirng} name, {Array} numbers
// * @returns {Object} phoneBook
const addToPhoneBook = (name, numbers) => {
  if (numbers == "" || name == "") return phoneBook;
  if (phoneBook.hasOwnProperty([name])) {
    numbers.forEach(phone => {
      phoneBook[name].push(phone);
    });
    return phoneBook;
  } else {
    return (phoneBook[name] = numbers);
  }
};

// * @param {} none
// * @returns {Array} result
// * example ['Alex: 555-20-01', 'Ivan: 555-10-01, 555-10-02']
const showPhoneBook = () => {
  let result = [];
  let phoneArray = Object.entries(phoneBook);
  phoneArray.forEach(element => {
    let name = element[0];
    let numbers = element[1].join(", ");
    result.push(`${name}: ${numbers}`);
  });
  return result.sort();
};

// * @param {String} phone
// * @returns {Boolean}
const removePhone = phone => {
  let phoneArray = Object.entries(phoneBook);
  var result = false;
  phoneArray.forEach(element => {
    element[1].forEach(entry => {
      // console.log(entry);
      // console.log(entry == phone);
      if (entry == phone) {
        const positionToRemove = element[1].indexOf(phone);
        element[1].splice(positionToRemove, 1);
        result = true;
      }
    });
    if (element[1].length == 0) {
      delete phoneBook[element[0]];
    }
  });
  return result;
};

//  * @param {String} command
//  * @returns {*} - результат зависит от команды

module.exports = function(command) {
  const action = command.split(" ")[0];
  switch (action) {
    case "ADD":
      const name = command.split(" ")[1];
      const numbers = command.split(" ")[2].split(",");
      return addToPhoneBook(name, numbers);
    case "SHOW":
      return showPhoneBook();
    case "REMOVE_PHONE":
      let number = command.split(" ")[1];
      return removePhone(number);
  }
};
